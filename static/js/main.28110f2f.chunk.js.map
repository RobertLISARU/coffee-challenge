{"version":3,"sources":["components/Tooltip.js","utils/DataStates.js","utils/StatefulData.js","components/MyMap.js","components/UserLocationText.js","components/CoffeeShopsText.js","hooks/useLocation.js","hooks/useCoffeeShops.js","App.js","reportWebVitals.js","index.js"],"names":["Tooltip","isVisible","name","distance","className","DataStates","LOADING","ERROR","AVAILABLE","EMPTY","Object","freeze","StatefulData","dataState","data","error","length","this","haversine","require","MyMap","props","state","shopTooltipsVisibility","userTooltipVisibility","toggleTooltipVisibility","bind","shops","userLocation","provider","osmProvider","defaultCenter","defaultZoom","width","height","createShopMarkers","createShopTooltips","createUserMarker","createUserTooltip","index","payload","newArray","setState","map","shop","anchor","parseFloat","x","y","color","id","onClick","computeDistanceFromUserTo","latitude","longitude","Math","round","z","s","String","fromCharCode","React","Component","LocationLoadingMessage","LocationErrorMessage","UserLocationText","CoffeeShopsErrorMessage","fetchError","code","text","CoffeeShopsEmptyListMessage","CoffeeShopsLoadingMessage","CoffeeShopsText","coffeeShops","useLocation","useState","setUserLocation","onUserLocationChange","coords","newUserLocation","setData","onUserLocationError","setError","message","useEffect","geo","navigator","geolocation","watcher","watchPosition","clearWatch","useCoffeeShops","setCoffeeShops","fetchCoffeeShops","a","fetch","method","tokenResponse","json","tokenJson","token","coffeeShopsResponse","fetchedCoffeeShops","status","statusText","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.28110f2f.chunk.js","sourcesContent":["import './../style/tooltip.css'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Tooltip = ({ isVisible, name, distance }) =>\r\n    isVisible ?\r\n        <div className={'shopTooltip'}>\r\n            <p>{name}</p>\r\n            <p>{distance}</p>\r\n        </div>\r\n        : null\r\n\r\nTooltip.propTypes = {\r\n    isVisible: PropTypes.bool,\r\n    name: PropTypes.string,\r\n    distance: PropTypes.string\r\n}\r\n\r\nexport default Tooltip\r\n","const DataStates = {\r\n    LOADING: 0,\r\n    ERROR: 1,\r\n    AVAILABLE: 2,\r\n    EMPTY: 3\r\n}\r\nObject.freeze(DataStates)\r\n\r\nexport default DataStates\r\n","import DataStates from './DataStates'\r\n\r\nclass StatefulData {\r\n    dataState = DataStates.LOADING\r\n    data = null\r\n    error = null\r\n\r\n    setData(data) {\r\n        if (!data || data.length == 0) {\r\n            this.dataState = DataStates.EMPTY\r\n        }\r\n        else this.dataState = DataStates.AVAILABLE\r\n\r\n        this.data = data\r\n    }\r\n\r\n    setError(error) {\r\n        this.dataState = DataStates.ERROR\r\n        this.error = error\r\n    }\r\n}\r\n\r\nexport default StatefulData\r\n","import { Map, Marker, Overlay } from 'pigeon-maps'\r\nimport Tooltip from './Tooltip'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport StatefulData from './../utils/StatefulData'\r\nimport DataStates from '../utils/DataStates'\r\nconst haversine = require('haversine')\r\n\r\nclass MyMap extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            shopTooltipsVisibility: [],\r\n            userTooltipVisibility: false\r\n        }\r\n        this.toggleTooltipVisibility = this.toggleTooltipVisibility.bind(this)\r\n    }\r\n\r\n    render() {\r\n        const { shops, userLocation } = this.props\r\n        return (\r\n            <Map\r\n                provider={this.osmProvider}\r\n                defaultCenter={[45.795, 24.147]}\r\n                defaultZoom={4}\r\n                width={600}\r\n                height={400}>\r\n\r\n                {this.createShopMarkers(shops)}\r\n                {this.createShopTooltips(shops)}\r\n                {this.createUserMarker(userLocation)}\r\n                {this.createUserTooltip(userLocation)}\r\n\r\n            </Map >\r\n        )\r\n    }\r\n\r\n    toggleTooltipVisibility({ payload }) {\r\n        const index = payload\r\n        let newArray = [...this.state.shopTooltipsVisibility]\r\n        newArray[index] = !newArray[index]\r\n        this.setState({ shopTooltipsVisibility: newArray })\r\n    }\r\n\r\n    createShopMarkers(shops) {\r\n        return shops.dataState == DataStates.AVAILABLE ? shops.data.map((shop) =>\r\n            <Marker\r\n                key={shop.id}\r\n                anchor={[parseFloat(shop.x), parseFloat(shop.y)]}\r\n                color='black'\r\n                payload={shop.id}\r\n                onClick={this.toggleTooltipVisibility}\r\n            />\r\n        ) : null\r\n    }\r\n\r\n    createShopTooltips(shops) {\r\n        return shops.dataState == DataStates.AVAILABLE ? shops.data.map((shop) =>\r\n            <Overlay key={shop.id} anchor={[parseFloat(shop.x), parseFloat(shop.y)]}>\r\n                <Tooltip\r\n                    isVisible={this.state.shopTooltipsVisibility[shop.id]}\r\n                    name={shop.name}\r\n                    distance={this.computeDistanceFromUserTo(\r\n                        { latitude: shop.x, longitude: shop.y })} />\r\n            </Overlay>\r\n        ) : null\r\n    }\r\n\r\n    createUserMarker(userLocation) {\r\n        return (userLocation.dataState == DataStates.AVAILABLE) ?\r\n            <Marker\r\n                anchor={[userLocation.data.latitude, userLocation.data.longitude]}\r\n                color='red'\r\n                payload={'user'}\r\n                onClick={() => {\r\n                    this.setState(state => ({ userTooltipVisibility: !state.userTooltipVisibility }))\r\n                }}\r\n            />\r\n            : null\r\n    }\r\n\r\n    createUserTooltip(userLocation) {\r\n        return (userLocation.dataState == DataStates.AVAILABLE) ?\r\n            <Overlay anchor={[userLocation.data.latitude, userLocation.data.longitude]}>\r\n                <Tooltip\r\n                    isVisible={this.state.userTooltipVisibility}\r\n                    name={'Your location'}\r\n                    distance={null} />\r\n            </Overlay>\r\n            : null\r\n    }\r\n\r\n    computeDistanceFromUserTo({ latitude, longitude }) {\r\n        return (this.props.userLocation.dataState == DataStates.AVAILABLE) ? Math.round(\r\n            haversine(\r\n                {\r\n                    latitude: this.props.userLocation.data.latitude,\r\n                    longitude: this.props.userLocation.data.longitude\r\n                },\r\n                {\r\n                    latitude: latitude,\r\n                    longitude: longitude\r\n                }\r\n            ) * 10) / 10 + ' km'\r\n            : 'Locating...'\r\n    }\r\n\r\n    osmProvider(x, y, z) {\r\n        const s = String.fromCharCode(97 + ((x + y + z) % 3))\r\n        return `https://${s}.tile.openstreetmap.org/${z}/${x}/${y}.png`\r\n    }\r\n}\r\n\r\nMyMap.propTypes = {\r\n    shops: PropTypes.instanceOf(StatefulData),\r\n    userLocation: PropTypes.instanceOf(StatefulData)\r\n}\r\n\r\nexport default MyMap\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport StatefulData from './../utils/StatefulData'\r\nimport DataStates from './../utils/DataStates'\r\n\r\nconst UserLocationText = ({ userLocation }) => {\r\n    switch (userLocation.dataState) {\r\n        case DataStates.LOADING:\r\n            return LocationLoadingMessage()\r\n        case DataStates.ERROR:\r\n            return LocationErrorMessage(userLocation.error)\r\n        case DataStates.AVAILABLE:\r\n            return <div>\r\n                Your location: {userLocation.data.latitude}, {userLocation.data.longitude}\r\n            </div>\r\n    }\r\n}\r\n\r\nconst LocationLoadingMessage = () => {\r\n    return <div>Locating...</div>\r\n}\r\n\r\nconst LocationErrorMessage = (error) => {\r\n    return <div>Error: {error}</div>\r\n}\r\n\r\nUserLocationText.propTypes = {\r\n    userLocation: PropTypes.instanceOf(StatefulData)\r\n}\r\n\r\nexport default UserLocationText\r\n","import DataStates from './../utils/DataStates'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport StatefulData from './../utils/StatefulData'\r\n\r\nconst CoffeeShopsText = ({ coffeeShops }) => {\r\n    switch (coffeeShops.dataState) {\r\n        case DataStates.LOADING:\r\n            return CoffeeShopsLoadingMessage()\r\n        case DataStates.ERROR:\r\n            return CoffeeShopsErrorMessage(coffeeShops.error)\r\n        case DataStates.EMPTY:\r\n            return CoffeeShopsEmptyListMessage()\r\n        case DataStates.AVAILABLE:\r\n            return (\r\n                <ul>\r\n                    <h2>Coffee Shops</h2>\r\n                    {coffeeShops.data.map((shop) =>\r\n                        <li key={shop.id}>\r\n                            {shop.name}<br />\r\n                            {shop.x}<br />\r\n                            {shop.y}<br />\r\n                        </li>\r\n                    )}\r\n                </ul>\r\n            )\r\n    }\r\n}\r\n\r\nconst CoffeeShopsErrorMessage = (fetchError) => {\r\n    return <p>Could not fetch shop locations. {fetchError.code} {fetchError.text}</p>\r\n}\r\n\r\nconst CoffeeShopsEmptyListMessage = () => {\r\n    return <p>No shops</p>\r\n}\r\n\r\nconst CoffeeShopsLoadingMessage = () => {\r\n    return <p>Fetching coffee shop list</p>\r\n}\r\n\r\nCoffeeShopsText.propTypes = {\r\n    coffeeShops: PropTypes.instanceOf(StatefulData)\r\n}\r\n\r\nexport default CoffeeShopsText\r\n","import { useState, useEffect } from 'react'\r\nimport StatefulData from '../utils/StatefulData'\r\n\r\nconst useLocation = () => {\r\n    const [userLocation, setUserLocation] = useState(new StatefulData())\r\n\r\n    const onUserLocationChange = ({ coords }) => {\r\n        const newUserLocation = new StatefulData()\r\n        newUserLocation.setData({\r\n            latitude: coords.latitude,\r\n            longitude: coords.longitude,\r\n        })\r\n        setUserLocation(newUserLocation)\r\n    }\r\n\r\n    const onUserLocationError = (error) => {\r\n        const newUserLocation = new StatefulData()\r\n        newUserLocation.setError(error.message)\r\n        setUserLocation(newUserLocation)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const geo = navigator.geolocation\r\n        let watcher = null\r\n        if (!geo) {\r\n            const newUserLocation = new StatefulData()\r\n            newUserLocation.setError('Geolocation is not supported')\r\n            setUserLocation(newUserLocation)\r\n        }\r\n        else {\r\n            watcher = geo.watchPosition(onUserLocationChange, onUserLocationError)\r\n        }\r\n\r\n        return () => geo.clearWatch(watcher)\r\n    }, [])\r\n\r\n    return userLocation\r\n}\r\n\r\nexport default useLocation\r\n","import { useState, useEffect } from 'react'\r\nimport StatefulData from './../utils/StatefulData'\r\n\r\nconst useCoffeeShops = () => {\r\n    const [coffeeShops, setCoffeeShops] = useState(new StatefulData())\r\n\r\n    const fetchCoffeeShops = async () => {\r\n        const tokenResponse = await fetch(\r\n            'https://blue-bottle-api-test.herokuapp.com/v1/tokens',\r\n            { method: 'POST' }\r\n        )\r\n        const tokenJson = await tokenResponse.json()\r\n        const coffeeShopsResponse = await fetch(\r\n            `https://blue-bottle-api-test.herokuapp.com/v1/coffee_shops?token=${tokenJson.token}`\r\n        )\r\n        const fetchedCoffeeShops = new StatefulData()\r\n        switch (coffeeShopsResponse.status) {\r\n            case 200:\r\n                fetchedCoffeeShops.setData(await coffeeShopsResponse.json())\r\n                break\r\n            default:\r\n                fetchedCoffeeShops.setError(\r\n                    {\r\n                        code: coffeeShopsResponse.status,\r\n                        text: coffeeShopsResponse.statusText\r\n                    })\r\n        }\r\n        setCoffeeShops(fetchedCoffeeShops)\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchCoffeeShops()\r\n    }, [])\r\n\r\n    return coffeeShops\r\n}\r\n\r\nexport default useCoffeeShops\r\n","import MyMap from './components/MyMap'\r\nimport UserLocationText from './components/UserLocationText'\r\nimport CoffeeShopsText from './components/CoffeeShopsText'\r\nimport useLocation from './hooks/useLocation'\r\nimport useCoffeeShops from './hooks/useCoffeeShops'\r\nimport React from 'react'\r\n\r\nfunction App() {\r\n  const userLocation = useLocation()\r\n  const coffeeShops = useCoffeeShops()\r\n\r\n  return (\r\n    <div>\r\n      <MyMap\r\n        shops={coffeeShops}\r\n        userLocation={userLocation}\r\n      />\r\n      <UserLocationText userLocation={userLocation} />\r\n      <CoffeeShopsText coffeeShops={coffeeShops} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}